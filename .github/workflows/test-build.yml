name: Test build FFRD images

on:
  pull_request:
    paths:
      - 'reference/base/**'
      - 'reference/hms/hms-golang/**'
      - 'reference/ras/v660/**'
      - '.github/workflows/build-and-push.yml'
      - '.github/workflows/test-build.yml'

env:
  BASE_IMAGE: ffrd-base
  HMS_IMAGE: hms-runner
  RAS_IMAGE: ras-runner
  LATEST_HMS_VERSION: "4.13-beta.6"

jobs:
  test-build-base:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build FFRD base image
        uses: docker/build-push-action@v4
        with:
          context: ./reference/base
          file: ./reference/base/Dockerfile
          push: false
          tags: ${{ env.BASE_IMAGE }}:test
          outputs: type=cacheonly
          cache-from: type=gha,scope=base
          cache-to: type=gha,mode=max,scope=base

  test-build-hms:
    needs: test-build-base
    runs-on: ubuntu-latest
    strategy:
      matrix:
        hms_version: [ "4.10", "4.11", "4.12", "4.13-beta.6" ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build HMS runner image
        uses: docker/build-push-action@v4
        with:
          context: ./reference/hms/hms-golang
          file: ./reference/hms/hms-golang/Dockerfile
          push: false
          tags: ${{ env.HMS_IMAGE }}:${{ matrix.hms_version }}
          outputs: type=cacheonly
          build-args: |
            HMS_VERSION=${{ matrix.hms_version }}
          cache-from: |
            type=gha,scope=base
            type=gha,scope=hms-${{ matrix.hms_version }}
          cache-to: type=gha,mode=max,scope=hms-${{ matrix.hms_version }}

  test-build-ras:
    needs: test-build-base
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build RAS v660 image
        uses: docker/build-push-action@v4
        with:
          context: ./reference/ras/v660
          file: ./reference/ras/v660/Dockerfile
          push: false
          tags: ${{ env.RAS_IMAGE }}:test
          outputs: type=cacheonly
          cache-from: |
            type=gha,scope=base
            type=gha,scope=ras
          cache-to: type=gha,mode=max,scope=ras
